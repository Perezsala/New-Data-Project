<?php

require_once 'config.php';

function search($search, $att) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
            DBUSER,
            DBPASS
        );




        // Construct the SELECT query with JOIN statements
        $select_query = "SELECT *FROM users_info
            INNER JOIN websites_info ON users_info.user_id = websites_info.website_id
            INNER JOIN password_info ON users_info.user_id = password_info.password_id
            WHERE {$att} LIKE \"%{$search}%\"";

        $statement = $db->prepare($select_query);
        $statement->execute();
        $result = $statement->fetchAll(PDO::FETCH_ASSOC);

        if (count($result) == 0) {
            return 0;
        } else {
            echo "      <table>\n";
            echo "        <thead>\n";
            echo "          <tr>\n";
            echo "            <th>User ID</th>\n";
            echo "            <th>First Name</th>\n";
            echo "            <th>Last Name</th>\n";
            echo "            <th>Username</th>\n";
            echo "            <th>Email Address</th>\n";
            echo "            <th>Comment</th>\n";
            echo "            <th>Timestamp</th>\n";
            echo "            <th>Website Name</th>\n";
            echo "            <th>Website URL</th>\n";
            echo "            <th>Password</th>\n";
            echo "          </tr>\n";
            echo "        </thead>\n";
            echo "        <tbody>\n";

            // Populate the table with data coming from the database...
            foreach ($result as $row) {
                echo "          <tr>\n";
                echo "            <td>" . htmlspecialchars($row['user_id']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['first_name']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['last_name']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['username']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['email_address']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['comment']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['timestamp']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['website_name']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['website_url']) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row['password']) . "</td>\n";
                echo "          </tr>\n";
            }

            echo "         </tbody>\n";
            echo "      </table>\n";
        }
    } catch (PDOException $e) {
        echo '<p>The following message was generated by function <code>search</code>:</p>' . "\n";
        echo '<p id="error">' . $e->getMessage() . '</p>' . "\n";
        echo "<p>There are a few reasons for this. Perhaps the database doesn’t exist or wasn’t mounted. Does the volume/drive containing the database have read and write permissions?</p>\n";
        echo '<p>Click <a href="./">here</a> to go back.</p>';

        exit;
    }


    }

    function delete($search, $att) {
        try {
            $db = new PDO(
                "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
                DBUSER,
                DBPASS
            );

            // Specify the table you want to delete from
            $delete_query = "DELETE FROM users_info WHERE {$att} LIKE \"%{$search}%\"";

            $statement = $db->prepare($delete_query);
            $statement->execute();

            echo '<p id="response"> Entry was deleted </p>';



        } catch (PDOException $e) {
            $db->rollBack();
            echo '<p>The following message was generated by function <code>deleteRecords</code>:</p>' . "\n";
            echo '<p id="error">' . $e->getMessage() . '</p>' . "\n";
            echo '<p>There was an error while executing the delete query.</p>';

            exit;
        }

    }

    function update($current_attribute, $new_attribute, $query_attribute, $pattern) {
        try {
            $db = new PDO(
                "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
                DBUSER,
                DBPASS
            );


            $update_query = "UPDATE users_info INNER JOIN websites_info ON users_info.user_id = websites_info.website_id
            INNER JOIN password_info ON users_info.user_id = password_info.password_id SET {$current_attribute}=:new_attribute WHERE {$query_attribute} LIKE :pattern";
            $statement = $db->prepare($update_query);
            $statement->bindParam(':new_attribute', $new_attribute);
            $statement->bindParam(':pattern', $pattern);
            $statement->execute();

            echo '<p id="response">Entry was updated</p>';


} catch( PDOException $e ) {
    echo '<p>The following message was generated by function <code>update</code>:</p>' . "\n";
    echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";

    exit;
}
    }


function insert($first_name,$last_name,$username,$email_address,$comment,$timestamp,$website_name,$website_url,$password) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
            DBUSER,
            DBPASS
        );

        $insert_query1= "INSERT INTO users_info (first_name, last_name, username, email_address, comment, timestamp)
        VALUES(:first_name, :last_name, :username, :email_address, :comment, :timestamp)";

        $statement = $db->prepare($insert_query1);
        $statement->execute(
            array(
             'first_name'    => $first_name,
             'last_name'     => $last_name,
             'username'      => $username,
             'email_address' => $email_address,
             'comment'       => $comment,
             'timestamp'     => $timestamp
            )
        );

       $insert_query2 = "INSERT INTO websites_info (website_name, website_url)
        VALUES(:website_name,:website_url)";

        $statement = $db->prepare($insert_query2);
        $statement->execute(
            array(
             'website_name' => $website_name,
             'website_url'  => $website_url,

            )
        );

        $insert_query3 = "INSERT INTO password_info (password) VALUES(:password)";
        $statement = $db->prepare($insert_query2);
        $statement->execute(
            array(
             'password' => $password,

            )
        );



        echo '<p id="response">New entry was added </p>';

    } catch(PDOException $e) {
        echo '<p>The following message was generated by function <code>insert</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";

        exit;
    }

}

















